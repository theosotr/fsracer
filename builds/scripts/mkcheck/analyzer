#!/bin/bash

NAME_T="$(cat $1 | grep 'Source: ' | cut -d ':' -f2)"
NAME="$(echo -e "${NAME_T}" | tr -d '[:space:]')"

cd $2

echo "
filter_in:
        - Makefile.*
        - /usr/.*
        - /etc/.*
        - //.*
        - /lib/.*
        - /bin/.*
        - /.*/debian/.*
" > filter.yaml

if ls | grep -q configure; then
  set -e
  aclocal
  automake --add-missing --foreign
  ./configure
  set +e
fi

START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json build 2> /results/$NAME/$NAME.mkerr
if [ $? -ne 0 ]; then
  echo "Build failed" >> /results/$NAME/$NAME.mkerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME > /results/$NAME/$NAME.time

cp foo.json /results/$NAME/$NAME.json
START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json \
  --rule-path filter.yaml fuzz \
  > /results/$NAME/$NAME.fuzz 2> /results/$NAME/$NAME.fuzzerr
if [ $? -ne 0 ]; then
  echo "Fuzz testing failed" >> /results/$NAME/$NAME.fuzzerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME >> /results/$NAME/$NAME.time

START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json \
  --rule-path filter.yaml race \
  > /results/$NAME/$NAME.race 2> /results/$NAME/$NAME.raceerr

if [ $? -ne 0 ]; then
  echo "Race testing failed" >> /results/$NAME/$NAME.raceerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME >> /results/$NAME/$NAME.time
