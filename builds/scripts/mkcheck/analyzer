#!/bin/bash

NAME_T="$(cat $1 | grep 'Source: ' | cut -d ':' -f2)"
NAME="$(echo -e "${NAME_T}" | tr -d '[:space:]')"

cd $2

echo "
filter_in:
        - Makefile.*
        - /usr/.*
        - /etc/.*
        - //.*
        - /lib/.*
        - /bin/.*
        - /.*/debian/.*
" > filter.yaml

debian/rules clean
debian/rules build


mkdir -p /results/$NAME

if [ ! -f Makefile ]; then
  echo "Couldn't find Makefile" > /results/$NAME/$NAME.warning
  exit 0
fi

make clean

echo "Building project with mkcheck..."
START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json build 2> /results/$NAME/$NAME.mkerr
if [ $? -ne 0 ]; then
  echo "Build failed" >> /results/$NAME/$NAME.mkerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME > /results/$NAME/$NAME.time

cp foo.json /results/$NAME/$NAME.json

echo "Fuzz testing..."
START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json \
  --rule-path filter.yaml fuzz \
  > /results/$NAME/$NAME.fuzz 2> /results/$NAME/$NAME.fuzzerr
if [ $? -ne 0 ]; then
  echo "Fuzz testing failed" >> /results/$NAME/$NAME.fuzzerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME >> /results/$NAME/$NAME.time

echo "Race testing..."
START_TIME=$(date +%s.%N)
fuzz_test --graph-path=foo.json \
  --rule-path filter.yaml race \
  > /results/$NAME/$NAME.race 2> /results/$NAME/$NAME.raceerr

if [ $? -ne 0 ]; then
  echo "Race testing failed" >> /results/$NAME/$NAME.raceerr
  exit 1
fi
ELAPSED_TIME=$(echo "$(date +%s.%N) - $START_TIME" | bc)
printf "%.2f\n" $ELAPSED_TIME >> /results/$NAME/$NAME.time
